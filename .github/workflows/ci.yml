name: CI

on:
  push:
    branches:
      - main
      - feature/**
      - chore/**
      - fix/**
      - test/**
  pull_request:
    branches:
      - main

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop

  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ikuji_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:

      - name: Install MySQL client tools
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential default-libmysqlclient-dev git libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Check network and resolve hostname
        run: |
          echo "Pinging db..."
          ping -c 3 db || echo "Ping failed"
          echo "Trying nslookup db..."
          nslookup db || echo "nslookup failed"

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h db -u root -ppassword --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Set up test database
        run: bundle exec rails db:create db:schema:load
        env:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          IKUJI_APP_DATABASE_PASSWORD: ${{ secrets.IKUJI_APP_DATABASE_PASSWORD }}

      - name: Run RSpec tests
        env:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          IKUJI_APP_DATABASE_PASSWORD: ${{ secrets.IKUJI_APP_DATABASE_PASSWORD }}
          # REDIS_URL: redis://localhost:6379/0
        run: bundle exec rspec

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
